# Generated by Django 3.2.11 on 2022-01-13 14:52

import apps.account.models
import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('marketplace', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('email', models.EmailField(db_index=True, max_length=254, unique=True, validators=[django.core.validators.EmailValidator()])),
                ('first_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя')),
                ('last_name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('role', models.CharField(choices=[('user', 'user'), ('admin', 'admin'), ('subscription', 'subscription')], default='user', max_length=20, verbose_name='Роль')),
                ('date_create', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Дата регистрации')),
                ('is_staff', models.BooleanField(default=False, verbose_name='Персонал')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный пользователь')),
                ('is_superuser', models.BooleanField(default=False, verbose_name='Администратор')),
                ('post_agreement', models.BooleanField(default=True, verbose_name='Согласие на отправку писем')),
                ('card', models.CharField(blank=True, max_length=16, null=True, verbose_name='Карта')),
                ('card_year', models.CharField(blank=True, max_length=5, null=True, verbose_name='Срок действия карты')),
                ('card_ovner', models.CharField(blank=True, max_length=250, null=True, verbose_name='Данные владельца карты')),
                ('ozon_id', models.IntegerField(blank=True, default=0, null=True, verbose_name='ID пользователя OZON')),
                ('api_key', models.CharField(blank=True, max_length=500, null=True, verbose_name='API ключ OZON')),
                ('name_org', models.CharField(blank=True, max_length=256, null=True, verbose_name='Название организации')),
                ('inn', models.CharField(blank=True, max_length=12, null=True, verbose_name='ИНН')),
                ('orgn', models.CharField(blank=True, max_length=12, null=True, verbose_name='ОРГН')),
                ('kpp', models.CharField(blank=True, max_length=9, null=True, verbose_name='КПП')),
                ('bank_account', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер счёта')),
                ('bank', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Название банка')),
                ('correspondent_bank_account', models.CharField(blank=True, max_length=20, null=True, verbose_name='Кореспондентский счёт')),
                ('bik', models.CharField(blank=True, max_length=8, null=True, verbose_name='БИК')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('marketplace_data', models.ManyToManyField(blank=True, null=True, related_name='user_marketplace', to='marketplace.Marketplace')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователя',
                'verbose_name_plural': 'пользователи',
                'ordering': ('id',),
            },
            managers=[
                ('objects', apps.account.models.UserManager()),
            ],
        ),
    ]
